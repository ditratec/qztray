name: build

on: [push, pull_request]

jobs:
    macos:
        runs-on: macos-latest
        strategy:
            matrix:
                java: [21]
        outputs:
            artifact-macos: ${{ steps.upload.outputs.artifact-name }}
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-java@v3
              with:
                  java-version: ${{ matrix.java }}
                  distribution: 'liberica'

            - name: Prepare certificates and provisioning
              run: |
                  printf "%s\n" "${{ secrets.CERT_PEM }}" > certificate.pem
                  printf "%s\n" "${{ secrets.PRIVATE_KEY }}" > private.key
                  chmod 600 private.key
                  cat > provision.json <<EOF
                  [
                    {
                      "description": "Instala mi root CA",
                      "type": "ca",
                      "data": "certificate.pem"
                    },
                    {
                      "description": "Confía en el certificado de QZ Tray",
                      "type": "cert",
                      "data": "certificate.pem"
                    },
                    {
                      "description": "Despliega la clave privada",
                      "type": "script",
                      "phase": "install",
                      "os": "mac",
                      "data": "deploy_key.sh"
                    }
                  ]
                  EOF

            - name: Install dependencies
              run: |
                  brew update
                  brew install nsis makeself

            - name: Build .pkg installer
              run: ant -Dprovision.file=provision.json pkgbuild

            - name: Upload installers as artifact
              id: upload
              uses: actions/upload-artifact@v4
              with:
                  name: installers-macos-java${{ matrix.java }}
                  path: out/qz-tray-*.pkg

    ubuntu:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                java: [21]
        outputs:
            artifact-linux: ${{ steps.upload.outputs.artifact-name }}
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-java@v3
              with:
                  java-version: ${{ matrix.java }}
                  distribution: 'liberica'

            - name: Prepare certificates and provisioning
              run: |
                  printf "%s\n" "${{ secrets.CERT_PEM }}" > certificate.pem
                  printf "%s\n" "${{ secrets.PRIVATE_KEY }}" > private.key
                  chmod 600 private.key
                  cat > provision.json <<EOF
                  [
                    {
                      "description": "Instala mi root CA",
                      "type": "ca",
                      "data": "certificate.pem"
                    },
                    {
                      "description": "Confía en el certificado de QZ Tray",
                      "type": "cert",
                      "data": "certificate.pem"
                    },
                    {
                      "description": "Despliega la clave privada",
                      "type": "script",
                      "phase": "install",
                      "os": "linux",
                      "data": "deploy_key.sh"
                    }
                  ]
                  EOF

            - name: Install dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y ant makeself

            - name: Build .run installer
              run: ant -Dprovision.file=provision.json makeself

            - name: Upload installers as artifact
              id: upload
              uses: actions/upload-artifact@v4
              with:
                  name: installers-linux-java${{ matrix.java }}
                  path: out/qz-tray-*.run

    windows:
        runs-on: windows-latest
        strategy:
            matrix:
                java: [21]
        outputs:
            artifact-windows: ${{ steps.upload.outputs.artifact-name }}
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-java@v3
              with:
                  java-version: ${{ matrix.java }}
                  distribution: 'liberica'

            - name: Prepare certificates and provisioning
              shell: pwsh
              run: |
                  Write-Output "${{ secrets.CERT_PEM }}" | Out-File -Encoding ascii certificate.pem
                  Write-Output "${{ secrets.PRIVATE_KEY }}" | Out-File -Encoding ascii private.key
                  $json = @'
                  [
                    {
                      "description": "Instala mi root CA",
                      "type": "ca",
                      "data": "certificate.pem"
                    },
                    {
                      "description": "Confía en el certificado de QZ Tray",
                      "type": "cert",
                      "data": "certificate.pem"
                    },
                    {
                      "description": "Despliega la clave privada",
                      "type": "script",
                      "phase": "install",
                      "os": "windows",
                      "data": "deploy_key.sh"
                    }
                  ]
                  '@
                  $json | Out-File -FilePath provision.json -Encoding ascii

            - name: Install dependencies
              shell: pwsh
              run: choco install -y ant nsis

            - name: Build .exe installer
              shell: pwsh
              run: ant --% -Dprovision.file=provision.json nsis

            - name: Upload installers as artifact
              id: upload
              uses: actions/upload-artifact@v4
              with:
                  name: installers-windows-java${{ matrix.java }}
                  path: out/qz-tray-*.exe

    release:
        needs: [ubuntu, macos, windows]
        runs-on: ubuntu-latest
        permissions:
            contents: write

        steps:
            - name: Download Linux artifact
              uses: actions/download-artifact@v4
              with:
                  name: installers-linux-java21
                  path: .  

            - name: Download macOS artifact
              uses: actions/download-artifact@v4
              with:
                  name: installers-macos-java21
                  path: .  

            - name: Download Windows artifact
              uses: actions/download-artifact@v4
              with:
                  name: installers-windows-java21
                  path: .  

            - name: Create GitHub Release and upload installers
              id: create_release
              uses: ncipollo/release-action@v1
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  tag: v${{ github.run_number }}
                  commit: ${{ github.sha }}
                  name: 'QZ Tray installers #${{ github.run_number }}'
                  artifacts: 'out/qz-tray-*.run,out/qz-tray-*.pkg,out/qz-tray-*.exe'
                  draft: false
                  prerelease: false
                  allowUpdates: true
                  artifactErrorsFailBuild: true
